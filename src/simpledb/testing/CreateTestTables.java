package simpledb.testing;/******************************************************************/import java.sql.Connection;import java.sql.Driver;import java.sql.SQLException;import java.sql.Statement;import java.util.Random;import simpledb.query.Plan;import simpledb.remote.SimpleDriver;import simpledb.server.SimpleDB;import simpledb.tx.Transaction;public class CreateTestTables { final static int maxSize=1000; /**  * @param args  */ public static void main(String[] args) {  // TODO Auto-generated method stub  Connection conn=null;  //using the drivers for simpleDB create a connection  Driver d = new SimpleDriver();  String qry="";  Random rand=null;  try {   // analogous to the driver   SimpleDB.init("studentdb", "LRU");   // analogous to the connection   Transaction tx = new Transaction();   qry = "Create table test1 (a1 int, a2 int)";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "Create table test2" + "( a1 int," + " a2 int" + ")";  SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "Create table test3" + "( a1 int," + "a2 int" + ")";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "Create table test4" + "( a1 int," + "a2 int" + ")";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "Create table test5" + "( a1 int," + "a2 int" + ")";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "create sh index idx1 on test1 (a1)";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "create ex index idx2 on test2 (a1)";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   tx = new Transaction();   qry = "create bt index idx3 on test3 (a1)";   SimpleDB.planner().executeUpdate(qry, tx);   tx.commit();   for(int i=1;i<6;i++)   {    if(i!=5)    {     rand=new Random(1);// ensure every table gets the same data     for(int j=0;j<maxSize;j++)     {      System.out.println(i);      tx = new Transaction();      qry = "insert into test" + i + " (a1, a2) values ("+rand.nextInt(1000)+","+ rand.nextInt(1000) + ")";      SimpleDB.planner().executeUpdate(qry, tx);      tx.commit();     }    }    else//case where i=5    {     for(int j=0;j<maxSize/2;j++)// insert 10000 records into test5     {      tx = new Transaction();      qry = "insert into test"+i+"(a1,a2) values ("+j+","+j+ ")";      SimpleDB.planner().executeUpdate(qry, tx);      tx.commit();     }    }   }  } catch (Exception e) {   // TODO Auto-generated catch block   e.printStackTrace();  } }}